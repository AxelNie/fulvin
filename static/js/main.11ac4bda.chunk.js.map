{"version":3,"sources":["components/LandingPage.js","components/Button.js","components/EnterInfo1.js","components/ToggleButton.js","components/EnterInfo2.js","components/EnterInfoLast2.js","components/EnterInfoLast.js","components/EnterInfo4.js","components/EnterInfo5.js","pages/NewBrew.js","pages/ReceptPage.js","pages/Handbook.js","components/Task.js","components/TaskCompleted.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","className","to","id","Button","onClick","children","EnterInfo1","onInput","useState","text","setText","class","type","placeholder","onChange","e","target","value","buttonStyle","color","backgroundColor","zIndex","ToggleButton","onToggle","option1","option2","active","style","console","log","EnterInfo2","Date","date","setDate","datePref","setDatePref","EnterInfoLast","EnterInfo4","volumeBatch","volumeLiter","volumeOfBrew","ratio","setRatio","volume","setVolume","volumePref","setVolumePref","getValue","val","Math","floor","calcValues","Slider","valueLabelDisplay","defaultValue","step","max","min","round","EnterInfo5","sugarAmount","setSugarAmount","data-toggle","faTrash","NewBrew","Btn","onNewBrew","brewList","activeStep","setActiveStep","name","initialDate","finalDate","task2Date","brew","setBrew","addDays","days","result","getDate","input","length","EnterInfoLast2","ReceptPage","Handbook","Task","nBrew","months","text2","text3","getMonth","TaskCompleted","text1","checkButtonIcon","icon","faCheckSquare","trashIcon","plusIcon","faPlus","Home","setBrewListFunction","setNBrew","checkButton","prevId","nextId","daysBetween","newArr","i","pop","deleteNBrew","mask","fill","options","height","daysUntilDone","calcProgressBar","amplitude","speed","points","gradientTransform","offset","stopColor","x","y","width","daysLeft","daysUntilNextTask","classname","first","second","one","getFullYear","getTime","App","colorHome","setColorHome","colorBook","setColorBook","colorGlassMartini","setColorGlassMartini","React","JSON","parse","localStorage","getItem","setBrewList","useEffect","setItem","stringify","homeIcon","faHome","bookIcon","faBook","hatIcon","faGlassMartini","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11ac4bda.chunk.js","sourcesContent":["import '../App.css';\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"LandingPage\">\r\n      <h1 className =\"logo\" >HEEFULVIN.</h1>\r\n      <li className=\"Button\">\r\n        <Link to=\"/newBrew\">BÖRJA BRYGG <div id=\"pil_lila2\"></div></Link>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import '../App.css';\r\nimport React, { Children } from \"react\";\r\n\r\n const Button = ({onClick,children}) => {\r\n  return (\r\n    <div className=\"ButtonHome\" onClick={onClick}>\r\n      {children}\r\n      <div id=\"pil_lila\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport Button from './Button';\r\nimport '../EnterInfo.css';\r\n\r\nconst EnterInfo1 = ({ onInput }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div class=\"EnterInfoone\">\r\n      <div id=\"top\">\r\n        <header>\r\n          <h1 >NAMNGE</h1>\r\n        </header>\r\n      </div>\r\n      <div id=\"theText\">\r\n        <input class=\"Input\" type=\"text\" placeholder=\"Ange namn\" onChange={(e) => setText(e.target.value)} ></input>\r\n      </div>\r\n\r\n      <Button onClick={() => onInput(text)}>NÄSTA</Button>\r\n\r\n      <div class=\"footer_dot\">\r\n        <div class=\"white\"></div>\r\n        <div class=\"grey\"></div>\r\n        <div class=\"grey\"></div>\r\n        <div class=\"grey\"></div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnterInfo1;","import { withTheme } from \"@material-ui/core\"\r\nimport { grey } from \"@material-ui/core/colors\"\r\nimport React from \"react\"\r\n\r\nconst buttonStyle = {\r\n    color: \"#FE9677\",\r\n    /*color: \"#cd5b5f\",*/\r\n    backgroundColor: \"white\" ,\r\n    zIndex: 1\r\n}\r\n\r\n\r\nconst ToggleButton = ({onToggle ,option1, option2, active}) => {\r\n    return (\r\n        <div> \r\n        <button className=\"left_btnn\" style={active===option1? buttonStyle : {}} onClick={()=>onToggle(option1)}> {option1}\r\n        </button> \r\n  \r\n        <button className=\"right_btnn\" style={active===option2? buttonStyle : {}} onClick={()=>onToggle(option2)}> {option2}</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ToggleButton","import '../App.css';\r\nimport React, { useState } from \"react\";\r\nimport Button from './Button';\r\nimport DatePicker from 'react-date-picker'\r\nimport '../EnterInfo.css';\r\nimport ToggleButton from './ToggleButton'\r\n\r\nconsole.log(\"hjahdjhaskldjaksldjklaasjkldjaskjka\")\r\n\r\n// Sets intitial and final date\r\n\r\nconst EnterInfo2 = ({ onInput }) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [datePref, setDatePref] = useState(\"initialDate\");\r\n\r\n  const updateDatePref = (e) => {\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div class=\"EnterInfoone\">\r\n      <div id=\"top\">\r\n        <header>\r\n          <h1>ANGE DATUM</h1>\r\n        </header>\r\n      </div>\r\n      <div id=\"content\">\r\n        <p id=\"info\"> Ange om du vill bestämma startdatum eller när\r\n        fulvinet ska vara klart </p>\r\n        <div class=\"btn-group\" >\r\n\r\n        <ToggleButton active={datePref} option1=\"Start\" option2=\"Klar\" onToggle={setDatePref}>\r\n         </ToggleButton>\r\n     \r\n        </div>\r\n        <DatePicker className=\"DatePick\" value={date} onChange={setDate} />\r\n\r\n\r\n      </div>\r\n      <Button onClick={() => onInput(date, datePref)}>NÄSTA</Button>\r\n      <div class=\"footer_dot\">\r\n        <div class=\"grey\"></div>\r\n        <div class=\"white\"></div>\r\n        <div class=\"grey\"></div>\r\n        <div class=\"grey\"></div>\r\n\r\n      </div>\r\n      {datePref}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnterInfo2;\r\n\r\n","\r\nimport '../App.css';\r\nimport React, { useState } from \"react\";\r\nimport '../EnterInfo.css';\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nconst EnterInfoLast = () => {\r\n  return (\r\n    <div class=\"EnterInfoone\">\r\n      <div id=\"top\">\r\n        <header>\r\n          <h1>Färdig!</h1>\r\n        </header>\r\n      </div>\r\n      \r\n      <p id=\"finalText\">Nu är din bryggning redo</p>\r\n      <div id=\"tillbakaa\"> \r\n        <Link id=\"link_home\" to=\"/Home\">TILL BRYGGNINGEN <div id=\"pil_lila2\"></div> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default EnterInfoLast;","import '../App.css';\r\nimport React, { useState } from \"react\";\r\n\r\nconst EnterInfoLast = ({ onInput }) => {\r\n  return (\r\n    <div>\r\n      {onInput()};\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default EnterInfoLast;","import '../App.css';\r\nimport React, { useState } from \"react\";\r\nimport Button from './Button';\r\nimport '../EnterInfo.css';\r\nimport { createStyles, Slider, withStyles } from '@material-ui/core'\r\n\r\nimport ToggleButton from './ToggleButton'\r\n\r\nconst EnterInfo4 = ({ onInput }) => {\r\n  const [ratio, setRatio] = useState(50);\r\n  const [volume, setVolume] = useState(0);\r\n  const [volumePref, setVolumePref] = useState(\"Liter\");\r\n\r\n  var volumeBatch;\r\n  var volumeLiter;\r\n  var volumeOfBrew;\r\n\r\n  const updateVolumePref = (e) => {\r\n    setVolumePref(e.target.value);\r\n  }\r\n\r\n  const getValue = (e, val) => {\r\n    setRatio(val)\r\n  }\r\n\r\n  function calcValues(ratio, volume, volumePref){\r\n    if (volumePref === \"Liter\") {\r\n      console.log(\"Beräknar utifrån liter\")\r\n      volumeOfBrew = volume * ratio * 0.01\r\n      if (volumeOfBrew % 20 === 0) {\r\n        volumeBatch = volumeOfBrew / 20 \r\n        if(volumeBatch === 0){ volumeBatch = 1} //volumeBatch kan inte vara 0\r\n        \r\n      }\r\n      else {\r\n        console.log(\"Beräknar utifrån satser\")\r\n        volumeBatch = Math.floor(volumeOfBrew / 20) + 1\r\n        \r\n      }\r\n      volumeLiter = volumeBatch * (20/(ratio * 0.01))\r\n    }\r\n    else { //VolumePref === satser\r\n      volumeBatch = volume;\r\n      volumeLiter = volumeBatch * (20/(ratio * 0.01))\r\n      volumeOfBrew = volume;\r\n    }\r\n\r\n  }\r\n\r\n  let maxi = 100;\r\n\r\n  const marks = [\r\n    {\r\n      value: 20,\r\n      label: '20%',\r\n    },\r\n    {\r\n      value: 40,\r\n      label: '40%',\r\n    },\r\n    {\r\n      value: 60,\r\n      label: '60%',\r\n    },\r\n    {\r\n      value: 80,\r\n      label: '80%',\r\n    },\r\n  ];\r\ncalcValues(ratio, volume, volumePref)\r\n  return (\r\n    \r\n    <div class=\"EnterInfoone\">\r\n      <div id=\"top\">\r\n        <header>\r\n          <h1>HUR MYCKET?</h1>\r\n        </header>\r\n      </div>\r\n      <div id=\"content\">\r\n        <p id=\"info\"> Ange mängd i antal liter utblandat eller satser </p>\r\n\r\n        <div id=\"button-and-input\">\r\n          <div class=\"btn-group-2\">\r\n            <ToggleButton active={volumePref} option1=\"Liter\" option2=\"Satser\" onToggle={setVolumePref}>\r\n            </ToggleButton>\r\n          </div>\r\n          <input id=\"Input2\" type=\"text2\" placeholder=\"Ex. 80\" onChange={(e) => setVolume(e.target.value)} ></input>\r\n        </div>\r\n\r\n        <p id=\"info-text\">Andel fulvin</p>\r\n\r\n        <div id=\"slider-and-text\">\r\n          <Slider valueLabelDisplay=\"auto\" defaultValue={50} step={10} max={maxi} min={0} color=\"white\" onChange={getValue} text={getValue}  ></Slider>\r\n          <p id=\"slider-text\">{ratio}%</p>\r\n        </div>\r\n\r\n        {volumePref === \"Liter\"  && volume > 0 && <p>Ger {volumeBatch} satser och {Math.round(volumeLiter,1)} liter utblandat</p> }\r\n        {volumePref === \"Satser\" && <p>Ger {Math.round(volumeLiter,1)} liter utblandat</p>}\r\n\r\n     \r\n\r\n\r\n      </div>\r\n     \r\n      <Button onClick={() => onInput(volumeBatch, volumeLiter, volumePref, ratio)}>NÄSTA</Button>\r\n\r\n      <div class=\"footer_dot\">\r\n        <div class=\"grey\"></div>\r\n        <div class=\"grey\"></div>\r\n        <div class=\"white\"></div>\r\n        <div class=\"grey\"></div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default EnterInfo4;","import '../App.css';\r\nimport React, { useState } from \"react\";\r\nimport Button from './Button';\r\nimport ToggleButton from './ToggleButton'\r\n\r\n\r\nconst EnterInfo5 = ({ onInput }) => {\r\n  const [sugarAmount, setSugarAmount] = useState(\"3.5\");\r\n\r\n  const updateSugarAmount = (e) => {\r\n    setSugarAmount(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div class=\"EnterInfoone\">\r\n       <div id=\"top\">\r\n      <header>\r\n        <h1>Mängd socker</h1>\r\n      </header>\r\n      </div>\r\n\r\n      <div id=\"content\"> \r\n      <p id=\"info\">3.5 eller 4.5 kilo socker</p>\r\n      <div class=\"btn-group\" data-toggle=\"buttons\">\r\n      <ToggleButton active={sugarAmount} option1=\"3.5\" option2=\"4.5\" onToggle={setSugarAmount}>\r\n         </ToggleButton>\r\n        </div>\r\n      </div>\r\n      <Button onClick={() => onInput(sugarAmount)}>NÄSTA</Button>\r\n\r\n      <div class= \"footer_dot\">\r\n      <div class=\"grey\"></div>\r\n      <div class=\"grey\"></div>\r\n      <div class=\"grey\"></div>\r\n      <div class=\"white\"></div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\nexport default EnterInfo5;","import React, { useState } from \"react\";\r\nimport EnterInfo1 from '../components/EnterInfo1'\r\nimport EnterInfo2 from '../components/EnterInfo2'\r\nimport EnterInfoLast2 from '../components/EnterInfoLast2'\r\nimport EnterInfoLast from '../components/EnterInfoLast'\r\nimport EnterInfo4 from \"../components/EnterInfo4\";\r\nimport EnterInfo5 from \"../components/EnterInfo5\";\r\nimport './Home.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst trashIcon = <FontAwesomeIcon icon={faTrash} />\r\n\r\n\r\nfunction NewBrew({ onNewBrew, brewList }) {\r\n\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [brew, setBrew] = useState({ name: \"Bryggning\", initialDate: null, finalDate: null, task2Date: null, type: null, volumeLiter: null, volumeBatch: null, sugarAmount: null, activeStep: 0, ratio: null });\r\n\r\n  function stepOneCompleted(input) {//Namn\r\n    if (input === \"\") { //Om inget namn anges\r\n\r\n      setBrew({ ...brew, name: \"Bryggning \" + (brewList.length + 1) })\r\n    } else {\r\n      setBrew({ ...brew, name: input })\r\n    }\r\n    setActiveStep(2);\r\n\r\n  }\r\n\r\n  function stepTwoCompleted(date, datePref) { //Datum\r\n    setActiveStep(3);\r\n\r\n    if (datePref === \"Start\") { setBrew({ ...brew, initialDate: date }) }\r\n    else { setBrew({ ...brew, finalDate: date }) }\r\n  }\r\n/*\r\n  function stepFourCompleted(volume, volumePref, ratio) { //Volym\r\n    \r\n\r\n    if (volumePref === \"Liter\") {\r\n      if (volume % 40 === 0) {\r\n        setBrew({ ...brew, volumeLiter: volume, volumeBatch: volume / 40 })\r\n      }\r\n      else {\r\n        setBrew({ ...brew, volumeLiter: volume, volumeBatch: Math.floor(volume / 40) + 1 })\r\n      }\r\n    }\r\n    else {\r\n      setBrew({ ...brew, volumeBatch: volume, volumeLiter: volume * 40 })\r\n    }\r\n    setActiveStep(4);\r\n  }\r\n  */\r\n\r\n function stepFourCompleted(volumeBatch, volumeLiter, volumePref, ratio) { //Volym\r\n\r\n      setBrew({ ...brew, volumeBatch: volumeBatch, volumeLiter: volumeLiter, ratio: ratio})\r\n    \r\n  setActiveStep(4);\r\n}\r\n\r\n  function stepFiveCompleted(input) // Mängd socker\r\n  {\r\n    if (brew['initialDate']) {\r\n\r\n      if (input === \"3.5\") {\r\n        setBrew({ ...brew, finalDate: addDays(brew['initialDate'], 8), task2Date: addDays(brew['initialDate'], 4), sugarAmount: input })\r\n\r\n      } else {\r\n        setBrew({ ...brew, finalDate: addDays(brew['initialDate'], 14), task2Date: addDays(brew['initialDate'], 10), sugarAmount: input })\r\n      }\r\n\r\n    } else {\r\n      if (input === \"3.5\") {\r\n        setBrew({ ...brew, initialDate: addDays(brew['finalDate'], -8), task2Date: addDays(brew['finalDate'], -4), sugarAmount: input })\r\n\r\n      } else {\r\n        setBrew({ ...brew, initialDate: addDays(brew['finalDate'], -14), task2Date: addDays(brew['finalDate'], -4), sugarAmount: input })\r\n      }\r\n\r\n    }\r\n    setActiveStep(5);\r\n  }\r\n\r\n  function stepSixCompleted() {\r\n    onNewBrew(brew);\r\n    setActiveStep(6);\r\n  }\r\n\r\n\r\n  function onInput() {\r\n    //Tillbakaknapp\r\n    if (activeStep > 1) {\r\n      setActiveStep(activeStep - 1)\r\n    }\r\n    else {\r\n      setActiveStep(1); //Hur ska vi gå tillbaka till \"/Home\"?\r\n    }\r\n  }\r\n\r\n\r\n  function addDays(date, days) {\r\n    var result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n\r\n  let Btn;\r\n  if (activeStep != 1) {\r\n    Btn = <button className=\"backbtn\" onClick={() => onInput()}></button>;\r\n  }\r\n  else { Btn = Btn = <button></button>; }\r\n\r\n  return (\r\n    <div>\r\n      {activeStep === 1 && <EnterInfo1 onInput={stepOneCompleted} />}  {/*Ange namn*/}\r\n      {activeStep === 2 && <EnterInfo2 onInput={stepTwoCompleted} />}  {/*Ange datum*/}\r\n      {activeStep === 3 && <EnterInfo4 onInput={stepFourCompleted} />}  {/*Ange mängd*/}\r\n      {activeStep === 4 && <EnterInfo5 onInput={stepFiveCompleted} />}\r\n      {activeStep === 5 && <EnterInfoLast onInput={stepSixCompleted} />} {Btn}\r\n      {activeStep === 6 && <EnterInfoLast2 />} {/*Fråga handledare hur vi ska kunna gå till \"/Home\" när vi är klara. Vill inte ha en länk som användaren måste klicka på*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewBrew;","import React from \"react\";\nimport './ReceptPage.css'\n\nfunction ReceptPage () {\n  \n  return (\n    \n    <div className='receptPage'>\n      <div className='header'><h1 className='receptHeader'>Recept</h1></div>\n      <div className='recept'>\n        <div className='receptIcon1' />\n        <div className='receptOne'>\n          <h2 className='receptName'>Majs</h2>\n          <ul className='receptParts1'>\n          20% FUN Light Tropical Fruits\n            <br />\n            <br />\n          80% Vatten\n          </ul>\n        </div>\n        <div className='receptIcon2' />\n        <div className='receptTwo'>\n          <h2 className='receptName'>3Cant</h2>\n          <ul className='receptParts2'>\n          20% Ica basic röda bär\n            <br />\n            <br />\n          80% Vatten\n          </ul>\n        </div>\n\n      </div>\n      <div className='breaker' />\n    </div>\n  )\n}\n\nexport default ReceptPage\n","import React from \"react\";\r\nimport './Handbook.css'\r\nconsole.log(\"hjäkldsjö\")\r\n\r\nfunction Handbook () {\r\n  \r\n  return (\r\n    \r\n    <div className='Handbook'>\r\n     <div className='breaker1'><h2 className='handbookHeader'>Handbok</h2></div>\r\n      <div className='handbook'>\r\n        <div className='box1'>\r\n          <h2 className='rubriker'>Material</h2>\r\n          <ul className='handbookList1'>\r\n            <li>Rulles 7-dagars vin, rött eller vitt</li>\r\n            <li>Jäshink  25 liter</li>\r\n            <li>Jäsrör</li>\r\n            <li>Hävert</li>\r\n            <li>3.5 - 4.5 kg socker</li>\r\n          </ul>\r\n        </div>\r\n        <div className='box2'>\r\n          <h2 className='rubriker'>Instruktioner</h2>\r\n          <ol className='handbookList1'>\r\n            <li>\r\n              I en väl rengjord jäshink löses sockret i 8 liter varmt kranvatten. Häll i fruktsaften och fyll på \r\n              med 10 liter kallt vatten. Tillsätt jästnärsalt, påse A - skaka om noga. Temperaturen bör nu vara 25-30 \r\n              grader. Tillsätt jästen - påse 1, låt stå 10 minuter och skaka sen om ordentligt. Sätt på jäsrör och låt \r\n              stå i jämn temperatur, inte under 20 grader. \r\n            </li>\r\n            <br/>\r\n            <li>\r\n              Jäsningen tar 3-4 dagar, sedan slutar det bubbla ur jäsröret, vinet börjar klarna vid ytan och smakar \r\n              inte längre sött. Detta gäller vid ovan angivna temperaturer. Är de lägre tar jäsningen längre tid. \r\n              Tillsätt jässtopp - påse 2 och skaka ur kolsyran. Skaka flera gånger med 15-30 minuters mellanrum. \r\n              Tillsätt klarning - påse 3 och skaka om. Tillsätt klarning - påse 4 (samt essenspåsen märkt med \r\n              namnet på sorten du gör - ej rödvin). Skaka om noga igen och ställ vinet på ett bord. \r\n              Klarningen tar 3-4 dagar. För rödvin görs nu en omtappning. Tappa först om 5 liter, \r\n              tillsätt rödvinsfärg och skaka om. Tappa över resten av vinet och skaka.  \r\n            </li>    \r\n          </ol>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Handbook\r\n","import '../App.css';\r\nimport React from \"react\";\r\n\r\n \r\n\r\nconst Task = ({brewList, nBrew, months}) => {\r\n\r\n    var text1 = \" I en väl rengjord jäshink löses sockret i 8 liter varmt kranvatten. \" +\r\n    \"Häll i fruksaften och fyll på med 10 liter kallt vatten. Tillsätt jästnärsalt,\" +\r\n    \"påse A och skaka om noga. Temperaturen bör nu vara 25-30 grader. Tillsätt jästen, påse 1\" +\r\n    \", låt stå 10 minuter och skaka sedan om ordentligt. Sätt på jäsrör och låt stå i jämn temperatur\" +\r\n    \", inte under 20 grader.\"\r\n   \r\n    var text2 = \"Jäsningen tar i regel 4 dagar. Det ska då ha slutat bubbla ur jäsröret, \" +\r\n    \"vinet ska ha börjat klarna vid ytan och inte längre smaka sött. Detta gäller vid angivna \" +\r\n    \"temperaturer. Är temperaturen lägre tar jäsningen längre tid. Tillsätt jässtopp, påse 2 och \"+\r\n    \"skaka ur kolsyran. Skaka flera gånger med 15-30 mellanrum. Tillsätt klarning, påse 3 och skaka om. \" +\r\n    \"Tillsätt klarning, påse 4. Skaka om noga igen och ställ vinet på ett bord\"\r\n   \r\n   var text3 = \"Tappa upp vinet i en ren behållare med hjälp av en hävert. Se till att inte hinkens \" +\r\n   \"bottensats rörs upp och förs med till behållaren. Nu återstår bara smaksättningen av fulvinet. Du har valt \" +\r\n   \"följande utspädningshalt: \" + brewList[nBrew]['ratio']+\"% vin.\"\r\n\r\n\r\n    \r\n\r\n    if (brewList[nBrew]['activeStep'] === 0) {\r\n        return (\r\n            <div>\r\n                <div id=\"uppgift\"> <p id=\"datum\" > {new Date(brewList[nBrew]['initialDate']).getDate()} {months[new Date(brewList[nBrew]['initialDate']).getMonth()]} </p>        \r\n                    <br></br><p id=\"uppgift_text\" > {text1} </p>\r\n                </div>\r\n                <div id=\"uppgift\"> <p id=\"datum\" > {new Date(brewList[nBrew]['task2Date']).getDate()} {months[new Date(brewList[nBrew]['task2Date']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text2} </p>\r\n                </div>\r\n                <div id=\"uppgift\"> <p id=\"datum\" > {new Date(brewList[nBrew]['finalDate']).getDate()} {months[new Date(brewList[nBrew]['finalDate']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text3} </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (brewList[nBrew]['activeStep']=== 1) {\r\n        return (\r\n            <div>\r\n                <div id=\"uppgift\"> <p id=\"datum\" > {new Date(brewList[nBrew]['task2Date']).getDate()} {months[new Date(brewList[nBrew]['task2Date']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text2} </p>\r\n                </div>\r\n                <div id=\"uppgift\"> <p id=\"datum\" > {new Date(brewList[nBrew]['finalDate']).getDate()} {months[new Date(brewList[nBrew]['finalDate']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text3} </p>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 2) {\r\n        return (\r\n            <div id=\"uppgift\"> <p id=\"datum\" > {new Date(brewList[nBrew]['finalDate']).getDate()} {months[new Date(brewList[nBrew]['finalDate']).getMonth()]} </p>\r\n                <p id=\"uppgift_text\" > {text3} </p>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div> <p id=\"brygg_klar\"> Bryggningen är klar </p></div>\r\n        )\r\n    }\r\n}\r\nexport default Task;","import '../App.css';\r\nimport React from \"react\";\r\n\r\n\r\n\r\n\r\nconst TaskCompleted = ({ brewList, nBrew, months }) => {\r\n\r\n    var text1 = \" I en väl rengjord jäshink löses sockret i 8 liter varmt kranvatten. \" +\r\n\"Häll i fruksaften och fyll på med 10 liter kallt vatten. Tillsätt jästnärsalt,\" +\r\n\"påse A och skaka om noga. Temperaturen bör nu vara 25-30 grader. Tillsätt jästen, påse 1\" +\r\n\", låt stå 10 minuter och skaka sedan om ordentligt. Sätt på jäsrör och låt stå i jämn temperatur\" +\r\n\", inte under 20 grader.\"\r\n\r\nvar text2 = \"Jäsningen tar i regel 4 dagar. Det ska då ha slutat bubbla ur jäsröret, \" +\r\n\"vinet ska ha börjat klarna vid ytan och inte längre smaka sött. Detta gäller vid angivna \" +\r\n\"temperaturer. Är temperaturen lägre tar jäsningen längre tid. Tillsätt jässtopp, påse 2 och \"+\r\n\"skaka ur kolsyran. Skaka flera gånger med 15-30 mellanrum. Tillsätt klarning, påse 3 och skaka om. \" +\r\n\"Tillsätt klarning, påse 4. Skaka om noga igen och ställ vinet på ett bord\"\r\n\r\nvar text3 = \"Tappa upp vinet i en ren behållare med hjälp av en hävert. Se till att inte hinkens \" +\r\n\"bottensats rörs upp och förs med till behållaren. Nu återstår bara smaksättningen av fulvinet. Du har valt \" +\r\n\"följande utspädningshalt: \" + brewList[nBrew]['ratio']+\"% vin.\"\r\n\r\n\r\n    if (brewList[nBrew]['activeStep'] === 3) {\r\n        return (\r\n            <div>\r\n                <div id=\"uppgiftAvslutad\"> <p id=\"datum\" > {new Date(brewList[nBrew]['initialDate']).getDate()} {months[new Date(brewList[nBrew]['initialDate']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text1} </p>\r\n                </div>\r\n                <div id=\"uppgiftAvslutad\"> <p id=\"datum\" > {new Date(brewList[nBrew]['task2Date']).getDate()} {months[new Date(brewList[nBrew]['task2Date']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text2} </p>\r\n                </div>\r\n                <div id=\"uppgiftAvslutad\"> <p id=\"datum\" > {new Date(brewList[nBrew]['finalDate']).getDate()} {months[new Date(brewList[nBrew]['finalDate']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text3} </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 2) {\r\n        return (\r\n            <div>\r\n                <div id=\"uppgiftAvslutad\"> <p id=\"datum\" > {new Date(brewList[nBrew]['initialDate']).getDate()} {months[new Date(brewList[nBrew]['initialDate']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text1} </p>\r\n                </div>\r\n                <div id=\"uppgiftAvslutad\"> <p id=\"datum\" > {new Date(brewList[nBrew]['task2Date']).getDate()} {months[new Date(brewList[nBrew]['initialDate']).getMonth()]} </p>\r\n                    <p id=\"uppgift_text\" > {text2} </p>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 1) {\r\n        return (\r\n            <div id=\"uppgiftAvslutad\"> <p id=\"datum\" > {new Date(brewList[nBrew]['initialDate']).getDate()} {months[new Date(brewList[nBrew]['initialDate']).getMonth()]} </p>\r\n                <p id=\"uppgift_text\" > {text1} </p>\r\n            </div>\r\n        );\r\n    }\r\n    else if(brewList[nBrew]['activeStep'] === 0){\r\n        return (\r\n            <div id=\"taskText\" > Här visas avslutade uppgifter</div>\r\n        )   \r\n    }\r\n    else{\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nexport default TaskCompleted;","import React, { useState } from \"react\";\r\nimport './Home.css';\r\nimport './wave.css';\r\nimport Task from '../components/Task'\r\nimport LandingPage from \"../components/LandingPage\";\r\nimport TaskCompleted from '../components/TaskCompleted'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\t\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\t\r\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport NewBrew from \"./NewBrew\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport Wave from 'react-wavify'\r\n\r\n\r\nconst checkButtonIcon = <FontAwesomeIcon icon={faCheckSquare} color=\"#F7727D\"/>\t\r\n\r\nconst trashIcon = <FontAwesomeIcon icon={faTrash} />\r\nconst plusIcon = <FontAwesomeIcon icon ={faPlus} /> \r\n\r\nfunction Home({  brewList, setBrewListFunction}) {\r\n  const [activeStepList, setActiveStepList] = useState([0, 0, 0, 0, 0]); //index 0 = active step for nBrew= 0\r\n  const [nBrew, setNBrew] = useState(0); //Numrering av brew, ändra för att visa andra slots i brewList[]\r\n\r\n  let checkButton = true;\r\n  let prevId = \"prevUnavailable\"\r\n  let nextId = \"nextAvailable\";\r\n  var months = [\"jan\", \"feb\", \"mar\", \"apr\", \"maj\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"];\r\n\r\n/* Funktioner för att bläddra mellan olika bryggninngar*/\r\n  function increaseNBrew() {\r\n    if (nBrew < brewList.length - 1) {\r\n      console.log(brewList.length);\r\n      setNBrew(nBrew + 1);\r\n    }\r\n  }\r\n\r\n  function decreaseNBrew() {\r\n    if (nBrew > 0) {\r\n      setNBrew(nBrew - 1)\r\n    }\r\n  }\r\n  \r\n\r\n  function updateTasks() {\r\n    console.log(\"yjpjakdjskl\")\r\n    let newArr = [...brewList];\r\n    newArr[nBrew]['activeStep'] = newArr[nBrew]['activeStep'] + 1;\r\n    setBrewListFunction(newArr);\r\n    console.log(\"hej funkar jagh\")\r\n  }\r\n\r\n  /* Raderar en bryggning*/\r\n  function deleteNBrew() {\r\n    //Kopierar arrayen brewList, tar bort brew på plats nBrew och förskjuter resterande\r\n    let newArr = [...brewList];\r\n    newArr[nBrew] = null;\r\n    for (var i = nBrew; i < newArr.length - 1; i++) {\r\n      newArr[i] = newArr[i + 1];\r\n    }\r\n    newArr.pop()\r\n    setBrewListFunction(newArr);\r\n/*\r\n    //Kopierar arrayen activeStepList, tar bort activeStep på plats nBrew och förskjuter resterande\r\n    let newArr2 = [...activeStepList];\r\n    newArr2[nBrew] = 0;\r\n    for (var i = nBrew; i < newArr.length; i++) {\r\n      newArr2[i] = newArr2[i + 1];\r\n    }\r\n    newArr2.pop()\r\n\r\n    //Uppdaterar nBrew\r\n    setActiveStepList(newArr2);\r\n*/\r\n    \r\n    if (nBrew > 0) {\r\n      setNBrew(nBrew - 1);\r\n    }\r\n  }\r\n  console.log(brewList);\r\n\r\n  function upDateId()\r\n  {\r\n\r\n    if (nBrew < brewList.length -1 )\r\n    {\r\n      nextId = \"nextAvailable\"\r\n    } else {\r\n      nextId = \"nextUnavailable\"\r\n   }\r\n\r\n    if (nBrew > 0)\r\n    {\r\n      prevId = \"prevAvailable\"\r\n    }else{\r\n      prevId = \"prevUnavailable\" \r\n    }\r\n}\r\n\r\n function showCheckButton()\r\n {\r\n  if(brewList[nBrew]['activeStep'] == 0 && daysBetween(new Date(), new Date(brewList[nBrew]['initialDate']))==0 )\r\n  {\r\n    checkButton = true;\r\n  } else if (brewList[nBrew]['activeStep'] == 1 && daysBetween(new Date(), new Date(brewList[nBrew]['task2Date']))==0)\r\n  {\r\n    checkButton = true; \r\n  } else if (brewList[nBrew]['activeStep'] == 2 && daysBetween(new Date(), new Date(brewList[nBrew]['finalDate']))==0)\r\n  {\r\n    checkButton = true;\r\n  } else{\r\n    checkButton = false;\r\n  }\r\n }\r\n\r\n/*Kollar om datum behöver uppdateras, körs varje gång sidan laddas*/\r\n  function upDateDates(){\r\n\r\n    if (brewList[nBrew]['activeStep'] === 0) {\r\n      if (daysBetween(new Date(), new Date(brewList[nBrew]['initialDate']) )< 0){\r\n        brewList[nBrew]['task2Date'] = addDays(new Date(brewList[nBrew]['task2Date']), -daysBetween(new Date(), new Date(brewList[nBrew]['initialDate'])))\r\n        brewList[nBrew]['finalDate'] = addDays(new Date(brewList[nBrew]['finalDate']), -daysBetween(new Date(), new Date(brewList[nBrew]['initialDate'])))\r\n        brewList[nBrew]['initialDate'] = new Date()\r\n      }\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 1) {\r\n      if (daysBetween(new Date(), new Date(brewList[nBrew]['task2Date'])) < 0){\r\n        brewList[nBrew]['finalDate'] = addDays(new Date(brewList[nBrew]['finalDate']), -daysBetween(new Date(), brewList[nBrew]['task2Date']))\r\n        brewList[nBrew]['task2Date'] = addDays(new Date(brewList[nBrew]['task2Date']), -daysBetween(new Date(), brewList[nBrew]['task2Date']))\r\n      }\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 2) {\r\n      if (daysBetween(new Date(), new Date(brewList[nBrew]['finalDate'])) < 0){\r\n        brewList[nBrew]['finalDate'] = addDays(new Date(brewList[nBrew]['finalDate']), -daysBetween(new Date(), brewList[nBrew]['finalDate']))\r\n      }\r\n    }\r\n  }\r\n\r\n  if (brewList.length != 0) {\r\n    upDateDates()\r\n    upDateId()\r\n    showCheckButton()\r\n    \r\n    return (\r\n      <div className=\"Wrapper\">\r\n        <div class=\"info\">\r\n          <div class=\"top\">\r\n            <button className=\"trashBtn\" onClick={() => deleteNBrew()}> <div className=\"icon\">{trashIcon}</div></button>\r\n          </div>\r\n\r\n          <div class=\"middle\">\r\n            <div class=\"vänster\"> \r\n              <p class=\"undertext\">\r\n                <p class=\"övertext\">{new Date(brewList[nBrew]['finalDate']).getDate()} {months[(new Date(brewList[nBrew]['finalDate']).getMonth())]}\r\n                </p> Beräknat slutdatum\r\n              </p>\r\n            </div>\r\n            \r\n             <div class=\"progress\">\r\n            <Wave mask=\"url(#mask)\" fill=\"white\" options={{\r\n            height: calcProgressBar(brewList[nBrew]['sugarAmount'], brewList[nBrew]['finalDate']),\r\n            amplitude: 2,\r\n            speed: 0.25,\r\n            points: 3}}>\r\n              \r\n              <defs>\r\n                <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\r\n                  <stop offset=\"1.0\" stopColor=\"white\" />\r\n                  <stop offset=\"4.5\" stopColor=\"black\" />\r\n                </linearGradient>\r\n                <mask id=\"mask\">\r\n                  <rect x=\"0\" y=\"0\" width=\"2000\" height=\"71\" fill=\"url(#gradient)\"  />\r\n                </mask>\r\n              </defs>\r\n            </Wave>\r\n          </div>\r\n\r\n           \r\n          <div class=\"höger\"> \r\n            <p class=\"övertext\"> {daysUntilNextTask()} Dagar</p>\r\n            <p class=\"undertext\"> till nästa uppgift </p>\r\n          </div>\r\n        </div>\r\n\r\n          <div class=\"bottom\">\r\n\r\n            <div class=\"vänster\"> <p class=\"övertext\"> { } </p>\r\n              <p class=\"undertext\"> Satser : {brewList[nBrew]['volumeBatch']}</p></div>\r\n\r\n            <div class=\"mitten\"> <p class=\"övertext\"> {Math.round(calcAlcohol(brewList[nBrew]['ratio'],brewList[nBrew]['sugarAmount']))}% </p>\r\n              <p class=\"undertext\"> Alkohol </p> </div>\r\n\r\n\r\n            <div class=\"höger\"> <p class=\"övertext\"> { } </p>\r\n              <p class=\"undertext\"> Liter totalt: {Math.round(brewList[nBrew]['volumeLiter'])} </p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"fulvinsnamn\">\r\n          <div class=\"prevone\">\r\n          <button id={prevId} onClick={() => decreaseNBrew()}></button>\r\n          </div>\r\n\r\n          <div class=\"prevtwo\"> \r\n            <p class=\"fulvinsnamn_text\"> {brewList[nBrew]['name']} </p>    \r\n          </div>\r\n          \r\n          <div class=\"prevtre\">\r\n          <button id= {nextId} onClick={() => increaseNBrew()}></button>\r\n          </div>\r\n        </div>\r\n        <div classname=\"plus1\">\r\n        <Link to=\"/NewBrew\"><button className=\"plusBtn\"> <div className=\"icon\">{plusIcon}</div></button></Link>\r\n        </div>\r\n\r\n      <div id=\"kommande\"> <p id=\"kommande_text\"> Kommande uppgifter </p>\r\n        {brewList[nBrew]['activeStep'] < 3 && checkButton==true && <div id=\"checkButton\" onClick={updateTasks}>{checkButtonIcon}</div>} \r\n          <Task  months = {months} brewList={brewList} nBrew={nBrew}></Task>\r\n      </div>\r\n\r\n      <div id=\"avslutade\"> <p id=\"kommande_text\"> Avslutade uppgifter </p>\r\n        <TaskCompleted months = {months} brewList={brewList} nBrew={nBrew}></TaskCompleted>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <LandingPage></LandingPage>\r\n    )\r\n  }\r\n\r\n  \r\n  /*Räknar ut antal dagar till nästa task*/\r\n  function daysUntilNextTask() {\r\n    var daysLeft;\r\n    if (brewList[nBrew]['activeStep'] === 0) {\r\n      daysLeft = 0;\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 1) {\r\n      daysLeft = daysBetween(new Date(), new Date(brewList[nBrew]['task2Date']))\r\n    }\r\n    else if (brewList[nBrew]['activeStep'] === 2) {\r\n      daysLeft = daysBetween(new Date(), new Date(brewList[nBrew]['finalDate']))\r\n    }\r\n    return daysLeft;\r\n  }\r\n\r\n  /* Räknar ut antal dagar mellan inparametrarna*/\r\n  function daysBetween(first, second) {\r\n\r\n    // Copy date parts of the timestamps, discarding the time parts.\r\n    var one = new Date(first.getFullYear(), first.getMonth(), first.getDate());\r\n    var two = new Date(second.getFullYear(), second.getMonth(), second.getDate());\r\n\r\n    // Do the math.\r\n    var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n    var millisBetween = two.getTime() - one.getTime();\r\n    var days = millisBetween / millisecondsPerDay;\r\n\r\n    // Round down.\r\n    return Math.floor(days);\r\n  }\r\n  function addDays(date, days) {\r\n    var result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  function calcAlcohol(ratio, sugarAmount){\r\n    if(sugarAmount === 3.5){\r\n      return ratio * 0.01 * 11;\r\n    }else{\r\n      return ratio * 0.01 * 14;\r\n    }\r\n  }\r\n  function calcProgressBar(sugarAmount, finalDate){ //Returnar värden mellan 5 och 60\r\nvar daysUntilDone = daysBetween(new Date(), new Date(finalDate));\r\nconsole.log(\"Days:\")\r\nconsole.log(daysUntilDone)\r\n    if(sugarAmount === \"3.5\"){ //En bryggning tar 8 dagar\r\n      console.log((60 - 55*((8-daysUntilDone)/8)))\r\n      return (60 - 55*((8-daysUntilDone)/8))\r\n\r\n    }else{ // 4.5 kg socker, en bryggning tar 14 dagar\r\n      console.log((60 - 55*((14-daysUntilDone)/14)))\r\n      return (60 - 55*((14-daysUntilDone)/14))\r\n    }\r\n\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\nimport LandingPage from './components/LandingPage';\nimport NewBrew from './pages/NewBrew';\nimport ReceptPage from './pages/ReceptPage';\nimport Handbook from './pages/Handbook';\nimport './App.css';\nimport Home from './pages/Home.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\t\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\t\nimport { faBook } from '@fortawesome/free-solid-svg-icons'\t\nimport { faGlassMartini } from '@fortawesome/free-solid-svg-icons'\n\nfunction App() {\n\n// Saving to storage\n\n\nconst [colorHome, setColorHome] = useState(\"#F7727D\")\nconst [colorBook, setColorBook] = useState(\"#AAAAAA\")\nconst [colorGlassMartini, setColorGlassMartini] = useState(\"#AAAAAA\")  \n  \nconst [brewList, setBrewList] = React.useState(JSON.parse(localStorage.getItem('myValueInLocalStorage')) || [])\n\nReact.useEffect(() => {\n  localStorage.setItem('myValueInLocalStorage', JSON.stringify(brewList));\n}, [brewList]);\n\n  const homeIcon = <FontAwesomeIcon icon={faHome} color={colorHome}/>\t\n  const bookIcon = <FontAwesomeIcon icon={faBook} color={colorBook}/>\t\n  const hatIcon = <FontAwesomeIcon icon={faGlassMartini} color={colorGlassMartini}/> \n\n  function onNewBrew(brew) {\n    setBrewList([...brewList, brew])\n  }\n  \n\n  function setBrewListFunction(newArr) {\n    setBrewList(newArr);\n  }\n\n  function changeColorHome(){\n      setColorHome(\"#F7727D\");\n      setColorBook(\"#AAAAAA\");\n      setColorGlassMartini(\"#AAAAAA\");\n  }\n\n  function changeColorRecipie(){\n    setColorHome(\"#AAAAAA\");\n    setColorBook(\"#AAAAAA\");\n    setColorGlassMartini(\"#F7727D\");\n}\nfunction changeColorHandbook(){\n  setColorHome(\"#AAAAAA\");\n      setColorBook(\"#F7727D\");\n      setColorGlassMartini(\"#AAAAAA\");\n  }\n  \n\n  return (\n    <div >\n      <Router>\n        <Switch>\n          <Route path=\"/NewBrew\">\n            <NewBrew onNewBrew={onNewBrew} brewList={brewList} />\n          </Route>\n          <Route path=\"/Recepies\">\n            <ReceptPage /> \n          </Route>\n          <Route path=\"/Handbook\">\n            <Handbook /> \n          </Route>\n          <Route path=\"/Home\">\n            <Home brewList={brewList} setBrewListFunction={setBrewListFunction} />\n          </Route>\n          <Route path=\"/\">\n            <LandingPage /> \n          </Route>\n          \n          \n\n          </Switch> \n          <div class=\"Footer\">\n          <Link to=\"/Recepies\" onClick={() => changeColorRecipie()} ><div class=\"Foot-left\"> <p class=\"Footer_text\" style = {{color: colorGlassMartini}}><div className=\"icon\" >{hatIcon}</div> Recept </p> </div></Link>\n          <Link to=\"/Home\" onClick={() => changeColorHome()} ><i class=\"fas fa-home\"></i><div class=\"Foot-middle\"> <p class=\"Footer_text\" style = {{color: colorHome}}> <div className=\"icon\">{homeIcon}</div> Hem </p> </div></Link>\n          <Link to=\"/Handbook\" onClick={() => changeColorHandbook()}><div class=\"Foot-right\" > <p class=\"Footer_text\" ><div className=\"icon\">{bookIcon}</div> Handbok </p> </div></Link>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}